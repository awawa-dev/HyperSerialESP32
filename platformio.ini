; Configurable parameters:
; SERIALCOM_SPEED = speed of the serial port (baud), global [env] section
; DATA_PIN = pin/GPIO for the LED strip data channel, specific [board] section
; CLOCK_PIN = pin/GPIO for the LED strip clock channel, specific [board] section
;
; MULTI-SEGMENT SUPPORT
; You can define second segment to handle. Add following parameters (with -D prefix to the build_flags sections).
; SECOND_SEGMENT_START_INDEX = start index of the second segment
; SECOND_SEGMENT_CLOCK_PIN = pin/GPIO for the second segment LED strip data channel
; SECOND_SEGMENT_DATA_PIN = pin/GPIO for the second segment LED strip clock channel
; SECOND_SEGMENT_REVERSED = if defined, the segment is reversed, the first LED of the second segment becomes the last
; For example: we have first LED strip with 512 leds and the second LED strip with 400 leds.
; For such configuration you need to set SECOND_SEGMENT_START_INDEX to 512 here, compile and upload the firmware.
; In HyperHDR you should have a single LED strip that contains 912 leds.
; SECOND_SEGMENT_REVERSED could be helpful if you start both segments in the middle of the bottom edge and join again at the top (both ends).
; Example build string for the second segment (append it to the global [env] or to the specific [board] section):
; build_flags = ... -DSECOND_SEGMENT_START_INDEX=450 -DSECOND_SEGMENT_DATA_PIN=4 -DSECOND_SEGMENT_REVERSED


[platformio]
default_envs = SK6812_RGBW_COLD, SK6812_RGBW_NEUTRAL, WS281x_RGB, SPI_APA102_SK9822_HD107, SPI_WS2801, s2_mini_SK6812_RGBW_COLD, s2_mini_SK6812_RGBW_NEUTRAL, s2_mini_WS281x_RGB, s2_mini_SPI_APA102_SK9822_HD107, s2_mini_SPI_WS2801

[env]
framework = arduino
extra_scripts = pre:extra_script.py
build_flags = -DSERIALCOM_SPEED=2000000

;==========================================================
; ESP32 board
;==========================================================
[esp32]
platform = espressif32@6.0.0
lib_deps = https://github.com/awawa-dev/NeoPixelBus.git#HyperSerialESP32
test_ignore =

[env:SK6812_RGBW_COLD]
build_flags = -DNEOPIXEL_RGBW -DCOLD_WHITE -DDATA_PIN=2 ${env.build_flags}
custom_prog_version = esp32_SK6812_RGBW_COLD

board = esp32dev
platform = ${esp32.platform}
lib_deps = ${esp32.lib_deps}
test_ignore = ${esp32.test_ignore}

[env:SK6812_RGBW_NEUTRAL]
build_flags = -DNEOPIXEL_RGBW -DDATA_PIN=2 ${env.build_flags}
custom_prog_version = esp32_SK6812_RGBW_NEUTRAL

board = esp32dev
platform = ${esp32.platform}
lib_deps = ${esp32.lib_deps}
test_ignore = ${esp32.test_ignore}

[env:WS281x_RGB]
build_flags = -DNEOPIXEL_RGB -DDATA_PIN=2 ${env.build_flags}
custom_prog_version = esp32_WS281x_RGB

board = esp32dev
platform = ${esp32.platform}
lib_deps = ${esp32.lib_deps}
test_ignore = ${esp32.test_ignore}

[env:SPI_APA102_SK9822_HD107]
build_flags = -DSPILED_APA102 -DDATA_PIN=2 -DCLOCK_PIN=4 ${env.build_flags}
custom_prog_version = esp32_SPI_APA102_SK9822_HD107

board = esp32dev
platform = ${esp32.platform}
lib_deps = ${esp32.lib_deps}
test_ignore = ${esp32.test_ignore}

[env:SPI_WS2801]
build_flags = -DSPILED_WS2801 -DDATA_PIN=2 -DCLOCK_PIN=4 ${env.build_flags}
custom_prog_version = esp32_SPI_WS2801

board = esp32dev
platform = ${esp32.platform}
lib_deps = ${esp32.lib_deps}
test_ignore = ${esp32.test_ignore}

;==========================================================
; ESP32-S2 board
;==========================================================
[esp32_lolin_s2_mini]
platform = espressif32@6.0.0
lib_deps = https://github.com/awawa-dev/NeoPixelBus.git#HyperSerialESP32
test_ignore = *

[env:s2_mini_SK6812_RGBW_COLD]
build_flags = -DNEOPIXEL_RGBW -DCOLD_WHITE -DDATA_PIN=2 ${env.build_flags}
custom_prog_version = esp32_s2_mini_SK6812_RGBW_COLD

board = lolin_s2_mini
board_build.mcu = esp32s2
platform = ${esp32_lolin_s2_mini.platform}
lib_deps = ${esp32_lolin_s2_mini.lib_deps}
test_ignore = ${esp32_lolin_s2_mini.test_ignore}

[env:s2_mini_SK6812_RGBW_NEUTRAL]
build_flags = -DNEOPIXEL_RGBW -DDATA_PIN=2 ${env.build_flags}
custom_prog_version = esp32_s2_mini_SK6812_RGBW_NEUTRAL

board = lolin_s2_mini
board_build.mcu = esp32s2
platform = ${esp32_lolin_s2_mini.platform}
lib_deps = ${esp32_lolin_s2_mini.lib_deps}
test_ignore = ${esp32_lolin_s2_mini.test_ignore}

[env:s2_mini_WS281x_RGB]
build_flags = -DNEOPIXEL_RGB -DDATA_PIN=2 ${env.build_flags}
custom_prog_version = esp32_s2_mini_WS281x_RGB

board = lolin_s2_mini
board_build.mcu = esp32s2
platform = ${esp32_lolin_s2_mini.platform}
lib_deps = ${esp32_lolin_s2_mini.lib_deps}
test_ignore = ${esp32_lolin_s2_mini.test_ignore}

[env:s2_mini_SPI_APA102_SK9822_HD107]
build_flags = -DSPILED_APA102 -DDATA_PIN=2 -DCLOCK_PIN=4 ${env.build_flags}
custom_prog_version = esp32_s2_mini_SPI_APA102_SK9822_HD107

board = lolin_s2_mini
board_build.mcu = esp32s2
platform = ${esp32_lolin_s2_mini.platform}
lib_deps = ${esp32_lolin_s2_mini.lib_deps}
test_ignore = ${esp32_lolin_s2_mini.test_ignore}

[env:s2_mini_SPI_WS2801]
build_flags = -DSPILED_WS2801 -DDATA_PIN=2 -DCLOCK_PIN=4 ${env.build_flags}
custom_prog_version = esp32_s2_mini_SPI_WS2801

board = lolin_s2_mini
board_build.mcu = esp32s2
platform = ${esp32_lolin_s2_mini.platform}
lib_deps = ${esp32_lolin_s2_mini.lib_deps}
test_ignore = ${esp32_lolin_s2_mini.test_ignore}

